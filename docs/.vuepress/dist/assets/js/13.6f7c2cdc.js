(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{362:function(t,a,r){"use strict";r.r(a);var s=r(25),_=Object(s.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"开发踩坑记录11月"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#开发踩坑记录11月"}},[t._v("#")]),t._v(" 开发踩坑记录11月")]),t._v(" "),r("blockquote",[r("p",[t._v("基于中台idg框架开发踩坑记录，包括页面结构梳理，项目结构，组件使用，命名规范等等")])]),t._v(" "),r("h2",{attrs:{id:"_11-2-leetcode记录"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-2-leetcode记录"}},[t._v("#")]),t._v(" 11.2 leetCode记录")]),t._v(" "),r("h3",{attrs:{id:"中间件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#中间件"}},[t._v("#")]),t._v(" 中间件")]),t._v(" "),r("p",[t._v("任务注册，任务编排，任务调度")]),t._v(" "),r("h2",{attrs:{id:"_11-3-开发记录"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-3-开发记录"}},[t._v("#")]),t._v(" 11.3 开发记录")]),t._v(" "),r("h3",{attrs:{id:"应用市场v2业务逻辑"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#应用市场v2业务逻辑"}},[t._v("#")]),t._v(" 应用市场V2业务逻辑")]),t._v(" "),r("p",[t._v("模块代办：开发者中心，用户中心，市场管理\n其中开发者中心和用户中心由应用管理服务跳转而来。")]),t._v(" "),r("h3",{attrs:{id:"树-基础概念-来自-wikipedia"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#树-基础概念-来自-wikipedia"}},[t._v("#")]),t._v(" 树(基础概念 来自 Wikipedia)")]),t._v(" "),r("blockquote",[r("p",[t._v("节点的度：一个节点含有的子树的个数称为该节点的度；"),r("br"),t._v("\n树的度：一棵树中，最大的节点度称为树的度；"),r("br"),t._v("\n叶节点或终端节点：度为零的节点；"),r("br"),t._v("\n非终端节点或分支节点：度不为零的节点；"),r("br"),t._v("\n父亲节点或父节点：若一个节点含有子节点，则这个节点称为其子节点的父节点；"),r("br"),t._v("\n孩子节点或子节点：一个节点含有的子树的根节点称为该节点的子节点；"),r("br"),t._v("\n兄弟节点：具有相同父节点的节点互称为兄弟节点；"),r("br"),t._v("\n节点的层次：从根开始定义起，根为第1层，根的子节点为第2层，以此类推；"),r("br"),t._v("\n深度：对于任意节点n,n的深度为从根到n的唯一路径长，根的深度为0；"),r("br"),t._v("\n高度：对于任意节点n,n的高度为从n到一片树叶的最长路径长，所有树叶的高度为0；"),r("br"),t._v("\n堂兄弟节点：父节点在同一层的节点互为堂兄弟；"),r("br"),t._v("\n节点的祖先：从根到该节点所经分支上的所有节点；"),r("br"),t._v("\n子孙：以某节点为根的子树中任一节点都称为该节点的子孙；"),r("br"),t._v("\n森林：由m（m>=0）棵互不相交的树的集合称为森林。")])]),t._v(" "),r("h3",{attrs:{id:"k8s-pod"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#k8s-pod"}},[t._v("#")]),t._v(" k8s && pod")]),t._v(" "),r("h3",{attrs:{id:"ci-cd-持续集成-持续交付"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#ci-cd-持续集成-持续交付"}},[t._v("#")]),t._v(" CI/CD(持续集成/持续交付)")]),t._v(" "),r("p",[t._v("Continuous Intergration/Continous Delivery\n以及\n持续测试/持续部署(Continous Testing/Continous Deployment)")]),t._v(" "),r("blockquote",[r("p",[t._v("https://linux.cn/article-9926-1.html")])]),t._v(" "),r("h4",{attrs:{id:"持续是什么意思？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#持续是什么意思？"}},[t._v("#")]),t._v(" 持续是什么意思？")]),t._v(" "),r("p",[t._v("· 频繁发布"),r("br"),t._v("\n例子：设备更新"),r("br"),t._v("\n通常，这可以通过很少甚至无需用户的交互或掌握的知识来完成。"),r("br"),t._v("\n· 自动化流程"),r("br"),t._v("\n如题，需要高效高频地完成构建，测试，分析，版本控制，以及某些情况下的部署。 自动化流程是十分必要的。"),r("br"),t._v("\n· 可重复"),r("br"),t._v("\n自动化流程在给定相同输入的情况下始终具有相同的行为，则这个过程应该是可重复的，比如我们把某个历史版本的代码作为输入，应该得到对应享同的可交付产出。"),r("br"),t._v("\n·快速迭代"),r("br"),t._v("\n通过自动化流程，将源代码最终转化为交付物的过程。自动化负责大部分工作，但自动化处理的过程可能仍然很慢。比如一轮集成测试下来耗时可能就要大半天。")]),t._v(" "),r("h4",{attrs:{id:"持续交付管道"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#持续交付管道"}},[t._v("#")]),t._v(" 持续交付管道")]),t._v(" "),r("p",[t._v("将源代码转换为可发布产品的多个不同的任务task和作业job通常串联成一个软件“管道”，一个自动流程成功完成后会启动管道中的下一个流程。这些管道有许多不同的叫法，例如持续交付管道、部署管道和软件开发管道。大体上讲，程序管理者在管道执行时管理管道各部分的定义、运行、监控和报告。")]),t._v(" "),r("h4",{attrs:{id:"todo"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#todo"}},[t._v("#")]),t._v(" todo...")])])}),[],!1,null,null,null);a.default=_.exports}}]);